{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\Workspace\\\\mutliple-tracks\\\\src\\\\components\\\\Audio.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\n\nclass Audio extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      duration: null,\n      volume: 100,\n      savedVolume: 100\n    };\n\n    this.onChangeSlider = e => {\n      this.audio.volume = e.target.value / 100;\n    };\n\n    this.sendData = () => {\n      this.props.parentCallback(this.state.duration);\n    };\n\n    this.onMuteButton = () => {\n      if (this.state.volume > 1) {\n        return React.createElement(\"button\", {\n          onClick: () => this.setState({\n            savedVolume: this.state.volume,\n            volume: 0\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, \"Mute\");\n      } else return React.createElement(\"button\", {\n        onClick: () => this.setState({\n          volume: this.state.savedVolume === 0 ? 100 : this.state.savedVolume\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"UnMute\");\n    };\n  }\n\n  handlePlay() {\n    if (this.props.play === \"play\" && this.audio) {\n      this.audio.play();\n    }\n  }\n\n  handlePause() {\n    if (this.props.play === \"pause\" && this.audio) {\n      this.audio.pause();\n    }\n  }\n\n  handleStop() {\n    if (this.props.play === \"stop\" && this.audio) {\n      this.audio.currentTime = 0;\n      this.audio.pause();\n    }\n  }\n\n  componentDidMount() {\n    this.audio.onloadedmetadata = () => {\n      console.log(this.audio.volume);\n      this.setState({\n        duration: this.audio.duration,\n        volume: this.audio.volume\n      }, this.sendData);\n    };\n  }\n\n  render() {\n    console.log(this.state.volume);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, this.handlePlay(), this.handleStop(), this.handlePause(), React.createElement(\"audio\", {\n      ref: audio => {\n        this.audio = audio;\n      },\n      src: this.props.src,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, this.onMuteButton(), React.createElement(Slider, {\n      onChange: this.onChangeSlider,\n      value: this.state.volume,\n      defaultValue: \"100\",\n      type: \"range\",\n      name: \"points\",\n      min: \"0\",\n      max: \"100\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    play: state.play.play\n  };\n};\n\nexport default connect(mapStateToProps)(Audio);\nconst Slider = styled.input`\n  appearance: none;\n  height: 25px;\n  outline: none;\n  opacity: 0.7;\n  transition: opacity 0.2s;\n  background: #02aab0;\n  ::-webkit-slider-thumb {\n    -webkit-appearance: none; /* Override default look */\n    appearance: none;\n    width: 25px; /* Set a specific slider handle width */\n    height: 25px; /* Slider handle height */\n    background: black; /* Green background */\n    cursor: pointer; /* Cursor on hover */\n  }\n  ::-moz-range-thumb {\n    width: 25px; /* Set a specific slider handle width */\n    height: 25px; /* Slider handle height */\n    background: black; /* Green background */\n    cursor: pointer; /* Cursor on hover */\n  }\n  :hover {\n    opacity: 1;\n  }\n`;","map":{"version":3,"sources":["D:/Code/Workspace/mutliple-tracks/src/components/Audio.js"],"names":["React","connect","styled","Audio","Component","state","duration","volume","savedVolume","onChangeSlider","e","audio","target","value","sendData","props","parentCallback","onMuteButton","setState","handlePlay","play","handlePause","pause","handleStop","currentTime","componentDidMount","onloadedmetadata","console","log","render","src","mapStateToProps","Slider","input"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nclass Audio extends React.Component {\r\n  state = {\r\n    duration: null,\r\n    volume: 100,\r\n    savedVolume: 100,\r\n  };\r\n  onChangeSlider = e => {\r\n    this.audio.volume = e.target.value / 100;\r\n  };\r\n  handlePlay() {\r\n    if (this.props.play === \"play\" && this.audio) {\r\n      this.audio.play();\r\n    }\r\n  }\r\n\r\n  handlePause() {\r\n    if (this.props.play === \"pause\" && this.audio) {\r\n      this.audio.pause();\r\n    }\r\n  }\r\n  handleStop() {\r\n    if (this.props.play === \"stop\" && this.audio) {\r\n      this.audio.currentTime = 0;\r\n      this.audio.pause();\r\n    }\r\n  }\r\n  sendData = () => {\r\n    this.props.parentCallback(this.state.duration);\r\n  };\r\n  onMuteButton = () => {\r\n    if (this.state.volume > 1) {\r\n      return (\r\n        <button\r\n          onClick={() =>\r\n            this.setState({ savedVolume: this.state.volume, volume: 0 })\r\n          }\r\n        >\r\n          Mute\r\n        </button>\r\n      );\r\n    } else\r\n      return (\r\n        <button\r\n          onClick={() =>\r\n            this.setState({\r\n              volume:\r\n                this.state.savedVolume === 0 ? 100 : this.state.savedVolume,\r\n            })\r\n          }\r\n        >\r\n          UnMute\r\n        </button>\r\n      );\r\n  };\r\n  componentDidMount() {\r\n    this.audio.onloadedmetadata = () => {\r\n      console.log(this.audio.volume);\r\n      this.setState(\r\n        { duration: this.audio.duration, volume: this.audio.volume },\r\n        this.sendData\r\n      );\r\n    };\r\n  }\r\n\r\n  render() {\r\n    console.log(this.state.volume);\r\n    return (\r\n      <div>\r\n        {this.handlePlay()}\r\n        {this.handleStop()}\r\n        {this.handlePause()}\r\n        <audio\r\n          ref={audio => {\r\n            this.audio = audio;\r\n          }}\r\n          src={this.props.src}\r\n        />\r\n\r\n        <p>\r\n          {this.onMuteButton()}\r\n          <Slider\r\n            onChange={this.onChangeSlider}\r\n            value={this.state.volume}\r\n            defaultValue=\"100\"\r\n            type=\"range\"\r\n            name=\"points\"\r\n            min=\"0\"\r\n            max=\"100\"\r\n          />\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return { play: state.play.play };\r\n};\r\nexport default connect(mapStateToProps)(Audio);\r\n\r\nconst Slider = styled.input`\r\n  appearance: none;\r\n  height: 25px;\r\n  outline: none;\r\n  opacity: 0.7;\r\n  transition: opacity 0.2s;\r\n  background: #02aab0;\r\n  ::-webkit-slider-thumb {\r\n    -webkit-appearance: none; /* Override default look */\r\n    appearance: none;\r\n    width: 25px; /* Set a specific slider handle width */\r\n    height: 25px; /* Slider handle height */\r\n    background: black; /* Green background */\r\n    cursor: pointer; /* Cursor on hover */\r\n  }\r\n  ::-moz-range-thumb {\r\n    width: 25px; /* Set a specific slider handle width */\r\n    height: 25px; /* Slider handle height */\r\n    background: black; /* Green background */\r\n    cursor: pointer; /* Cursor on hover */\r\n  }\r\n  :hover {\r\n    opacity: 1;\r\n  }\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}