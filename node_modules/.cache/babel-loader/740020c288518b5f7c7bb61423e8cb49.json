{"ast":null,"code":"import _objectSpread from \"D:\\\\Code\\\\Workspace\\\\mutliple-tracks\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport { combineReducers } from \"redux\";\nimport _ from \"lodash\";\nexport const trackListReducer = sta => {\n  switch (action.type) {\n    case \"ADD_TRACK\":\n      return _objectSpread({}, state, {\n        [action.payload.fileName]: action.payload\n      });\n\n    case \"REMOVE_TRACK\":\n      return _.omit(state, action.payload);\n\n    case \"FETCH_TRACKS\":\n      return _objectSpread({}, state, {}, _.mapKeys(action.payload, \"filename\"));\n\n    default:\n      return state;\n  }\n};\nconst INITIAL_STATE = {\n  play: null\n};\nexport const playTrackReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case \"PLAY_TRACKS\":\n      return _objectSpread({}, state, {\n        play: true\n      });\n\n    case \"PAUSE_TRACKS\":\n      return _objectSpread({}, state, {\n        play: false\n      });\n\n    case \"STOP_TRACKS\":\n      return _objectSpread({}, state, {\n        play: false\n      });\n\n    default:\n      return state;\n  }\n};\nexport default combineReducers({\n  tracks: trackListReducer,\n  play: playTrackReducer\n});","map":{"version":3,"sources":["D:/Code/Workspace/mutliple-tracks/src/reducers/index.js"],"names":["combineReducers","_","trackListReducer","sta","action","type","state","payload","fileName","omit","mapKeys","INITIAL_STATE","play","playTrackReducer","tracks"],"mappings":";AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAO,MAAMC,gBAAgB,GAAGC,GAAG,IAAI;AACrC,UAAQC,MAAM,CAACC,IAAf;AACE,SAAK,WAAL;AACE,+BAAYC,KAAZ;AAAmB,SAACF,MAAM,CAACG,OAAP,CAAeC,QAAhB,GAA2BJ,MAAM,CAACG;AAArD;;AACF,SAAK,cAAL;AACE,aAAON,CAAC,CAACQ,IAAF,CAAOH,KAAP,EAAcF,MAAM,CAACG,OAArB,CAAP;;AAEF,SAAK,cAAL;AACE,+BAAYD,KAAZ,MAAsBL,CAAC,CAACS,OAAF,CAAUN,MAAM,CAACG,OAAjB,EAA0B,UAA1B,CAAtB;;AACF;AACE,aAAOD,KAAP;AATJ;AAWD,CAZM;AAaP,MAAMK,aAAa,GAAG;AAAEC,EAAAA,IAAI,EAAE;AAAR,CAAtB;AACA,OAAO,MAAMC,gBAAgB,GAAG,CAACP,KAAK,GAAGK,aAAT,EAAwBP,MAAxB,KAAmC;AACjE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,aAAL;AACE,+BAAYC,KAAZ;AAAmBM,QAAAA,IAAI,EAAE;AAAzB;;AACF,SAAK,cAAL;AACE,+BAAYN,KAAZ;AAAmBM,QAAAA,IAAI,EAAE;AAAzB;;AACF,SAAK,aAAL;AACE,+BAAYN,KAAZ;AAAmBM,QAAAA,IAAI,EAAE;AAAzB;;AACF;AACE,aAAON,KAAP;AARJ;AAUD,CAXM;AAYP,eAAeN,eAAe,CAAC;AAC7Bc,EAAAA,MAAM,EAAEZ,gBADqB;AAE7BU,EAAAA,IAAI,EAAEC;AAFuB,CAAD,CAA9B","sourcesContent":["import { combineReducers } from \"redux\";\r\nimport _ from \"lodash\";\r\nexport const trackListReducer = sta => {\r\n  switch (action.type) {\r\n    case \"ADD_TRACK\":\r\n      return { ...state, [action.payload.fileName]: action.payload };\r\n    case \"REMOVE_TRACK\":\r\n      return _.omit(state, action.payload);\r\n\r\n    case \"FETCH_TRACKS\":\r\n      return { ...state, ..._.mapKeys(action.payload, \"filename\") };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nconst INITIAL_STATE = { play: null };\r\nexport const playTrackReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case \"PLAY_TRACKS\":\r\n      return { ...state, play: true };\r\n    case \"PAUSE_TRACKS\":\r\n      return { ...state, play: false };\r\n    case \"STOP_TRACKS\":\r\n      return { ...state, play: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default combineReducers({\r\n  tracks: trackListReducer,\r\n  play: playTrackReducer,\r\n});\r\n"]},"metadata":{},"sourceType":"module"}