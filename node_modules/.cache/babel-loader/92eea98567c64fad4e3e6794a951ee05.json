{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\Workspace\\\\mutliple-tracks\\\\src\\\\components\\\\BoxSpawner.js\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { connect } from \"react-redux\";\nimport Filebox from \"./Filebox\";\nimport { AddIcon } from \"./styleSheet\";\n\nclass BoxSpawner extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      boxCount: 2,\n      boxes: [0, 1]\n    };\n\n    this.renderAddButton = () => {\n      if (Object.keys(this.props.tracks).length >= this.state.boxCount) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 11\n          },\n          __self: this\n        }, React.createElement(AddIcon, {\n          onClick: () => this.setState({\n            boxes: this.state.boxes.concat([this.state.boxCount]),\n            boxCount: this.state.boxCount + 1\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 12\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"fas fa-plus\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        }), \"Add\"));\n      }\n    };\n\n    this.renderBoxes = () => {\n      return React.createElement(React.Fragment, null, this.state.boxes.map(index => {\n        return React.createElement(Filebox, {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        });\n      }));\n    };\n  }\n\n  render() {\n    return React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, this.renderBoxes(), this.renderAddButton());\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    tracks: state.tracks\n  };\n};\n\nexport default connect(mapStateToProps)(BoxSpawner);\nconst Wrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  div {\n    flex: 0 48%;\n  }\n  @media screen and (max-width: 900px) {\n    flex-direction: column;\n    div {\n      flex: 50% 0;\n    }\n  }\n`;","map":{"version":3,"sources":["D:/Code/Workspace/mutliple-tracks/src/components/BoxSpawner.js"],"names":["React","styled","connect","Filebox","AddIcon","BoxSpawner","Component","state","boxCount","boxes","renderAddButton","Object","keys","props","tracks","length","setState","concat","renderBoxes","map","index","render","mapStateToProps","Wrapper","div"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,OAAT,QAAwB,cAAxB;;AACA,MAAMC,UAAN,SAAyBL,KAAK,CAACM,SAA/B,CAAyC;AAAA;AAAA;AAAA,SACvCC,KADuC,GAC/B;AAAEC,MAAAA,QAAQ,EAAE,CAAZ;AAAeC,MAAAA,KAAK,EAAE,CAAC,CAAD,EAAI,CAAJ;AAAtB,KAD+B;;AAAA,SAEvCC,eAFuC,GAErB,MAAM;AACtB,UAAIC,MAAM,CAACC,IAAP,CAAY,KAAKC,KAAL,CAAWC,MAAvB,EAA+BC,MAA/B,IAAyC,KAAKR,KAAL,CAAWC,QAAxD,EAAkE;AAChE,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,OAAD;AACE,UAAA,OAAO,EAAE,MACP,KAAKQ,QAAL,CAAc;AACZP,YAAAA,KAAK,EAAE,KAAKF,KAAL,CAAWE,KAAX,CAAiBQ,MAAjB,CAAwB,CAAC,KAAKV,KAAL,CAAWC,QAAZ,CAAxB,CADK;AAEZA,YAAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWC,QAAX,GAAsB;AAFpB,WAAd,CAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAQE;AAAG,UAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UARF,QADF,CADF;AAeD;AACF,KApBsC;;AAAA,SAqBvCU,WArBuC,GAqBzB,MAAM;AAClB,aACE,0CACG,KAAKX,KAAL,CAAWE,KAAX,CAAiBU,GAAjB,CAAqBC,KAAK,IAAI;AAC7B,eAAO,oBAAC,OAAD;AAAS,UAAA,GAAG,EAAEA,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OAFA,CADH,CADF;AAOD,KA7BsC;AAAA;;AA+BvCC,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKH,WAAL,EADH,EAEG,KAAKR,eAAL,EAFH,CADF;AAMD;;AAtCsC;;AAwCzC,MAAMY,eAAe,GAAGf,KAAK,IAAI;AAC/B,SAAO;AAAEO,IAAAA,MAAM,EAAEP,KAAK,CAACO;AAAhB,GAAP;AACD,CAFD;;AAGA,eAAeZ,OAAO,CAACoB,eAAD,CAAP,CAAyBjB,UAAzB,CAAf;AACA,MAAMkB,OAAO,GAAGtB,MAAM,CAACuB,GAAI;;;;;;;;;;;;CAA3B","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { connect } from \"react-redux\";\r\nimport Filebox from \"./Filebox\";\r\nimport { AddIcon } from \"./styleSheet\";\r\nclass BoxSpawner extends React.Component {\r\n  state = { boxCount: 2, boxes: [0, 1] };\r\n  renderAddButton = () => {\r\n    if (Object.keys(this.props.tracks).length >= this.state.boxCount) {\r\n      return (\r\n        <div>\r\n          <AddIcon\r\n            onClick={() =>\r\n              this.setState({\r\n                boxes: this.state.boxes.concat([this.state.boxCount]),\r\n                boxCount: this.state.boxCount + 1,\r\n              })\r\n            }\r\n          >\r\n            <i className=\"fas fa-plus\"></i>\r\n            Add\r\n          </AddIcon>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  renderBoxes = () => {\r\n    return (\r\n      <>\r\n        {this.state.boxes.map(index => {\r\n          return <Filebox key={index} />;\r\n        })}\r\n      </>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Wrapper>\r\n        {this.renderBoxes()}\r\n        {this.renderAddButton()}\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return { tracks: state.tracks };\r\n};\r\nexport default connect(mapStateToProps)(BoxSpawner);\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  div {\r\n    flex: 0 48%;\r\n  }\r\n  @media screen and (max-width: 900px) {\r\n    flex-direction: column;\r\n    div {\r\n      flex: 50% 0;\r\n    }\r\n  }\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}