{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\Workspace\\\\mutliple-tracks\\\\src\\\\components\\\\Audio.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\n\nclass Audio extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      duration: null,\n      volume: 100\n    };\n\n    this.onChangeSlider = e => {\n      this.audio.volume = e.target.value / 100;\n    };\n\n    this.sendData = () => {\n      this.props.parentCallback(this.state.duration);\n    };\n  }\n\n  handlePlay() {\n    if (this.props.play === \"play\" && this.audio) {\n      this.audio.play();\n    }\n  }\n\n  handlePause() {\n    if (this.props.play === \"pause\" && this.audio) {\n      this.audio.pause();\n    }\n  }\n\n  handleStop() {\n    if (this.props.play === \"stop\" && this.audio) {\n      this.audio.currentTime = 0;\n      this.audio.pause();\n    }\n  }\n\n  componentDidMount() {\n    this.audio.onloadedmetadata = () => {\n      console.log(this.audio.volume);\n      this.setState({\n        duration: this.audio.duration,\n        volume: this.audio.volume\n      }, this.sendData);\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, this.handlePlay(), this.handleStop(), this.handlePause(), React.createElement(\"audio\", {\n      ref: audio => {\n        this.audio = audio;\n      },\n      src: this.props.src,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: this.onChangeSlider,\n      defaultValue: \"100\",\n      type: \"range\",\n      name: \"points\",\n      min: \"0\",\n      max: \"100\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    play: state.play.play\n  };\n};\n\nexport default connect(mapStateToProps)(Audio);\nSlider = styled.input``;","map":{"version":3,"sources":["D:/Code/Workspace/mutliple-tracks/src/components/Audio.js"],"names":["React","connect","styled","Audio","Component","state","duration","volume","onChangeSlider","e","audio","target","value","sendData","props","parentCallback","handlePlay","play","handlePause","pause","handleStop","currentTime","componentDidMount","onloadedmetadata","console","log","setState","render","src","mapStateToProps","Slider","input"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AACA,MAAMC,KAAN,SAAoBH,KAAK,CAACI,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAClCC,KADkC,GAC1B;AACNC,MAAAA,QAAQ,EAAE,IADJ;AAENC,MAAAA,MAAM,EAAE;AAFF,KAD0B;;AAAA,SAKlCC,cALkC,GAKjBC,CAAC,IAAI;AACpB,WAAKC,KAAL,CAAWH,MAAX,GAAoBE,CAAC,CAACE,MAAF,CAASC,KAAT,GAAiB,GAArC;AACD,KAPiC;;AAAA,SAyBlCC,QAzBkC,GAyBvB,MAAM;AACf,WAAKC,KAAL,CAAWC,cAAX,CAA0B,KAAKV,KAAL,CAAWC,QAArC;AACD,KA3BiC;AAAA;;AAQlCU,EAAAA,UAAU,GAAG;AACX,QAAI,KAAKF,KAAL,CAAWG,IAAX,KAAoB,MAApB,IAA8B,KAAKP,KAAvC,EAA8C;AAC5C,WAAKA,KAAL,CAAWO,IAAX;AACD;AACF;;AAEDC,EAAAA,WAAW,GAAG;AACZ,QAAI,KAAKJ,KAAL,CAAWG,IAAX,KAAoB,OAApB,IAA+B,KAAKP,KAAxC,EAA+C;AAC7C,WAAKA,KAAL,CAAWS,KAAX;AACD;AACF;;AACDC,EAAAA,UAAU,GAAG;AACX,QAAI,KAAKN,KAAL,CAAWG,IAAX,KAAoB,MAApB,IAA8B,KAAKP,KAAvC,EAA8C;AAC5C,WAAKA,KAAL,CAAWW,WAAX,GAAyB,CAAzB;AACA,WAAKX,KAAL,CAAWS,KAAX;AACD;AACF;;AAIDG,EAAAA,iBAAiB,GAAG;AAClB,SAAKZ,KAAL,CAAWa,gBAAX,GAA8B,MAAM;AAClCC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKf,KAAL,CAAWH,MAAvB;AACA,WAAKmB,QAAL,CACE;AAAEpB,QAAAA,QAAQ,EAAE,KAAKI,KAAL,CAAWJ,QAAvB;AAAiCC,QAAAA,MAAM,EAAE,KAAKG,KAAL,CAAWH;AAApD,OADF,EAEE,KAAKM,QAFP;AAID,KAND;AAOD;;AAEDc,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKX,UAAL,EADH,EAEG,KAAKI,UAAL,EAFH,EAGG,KAAKF,WAAL,EAHH,EAIE;AACE,MAAA,GAAG,EAAER,KAAK,IAAI;AACZ,aAAKA,KAAL,GAAaA,KAAb;AACD,OAHH;AAIE,MAAA,GAAG,EAAE,KAAKI,KAAL,CAAWc,GAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,QAAQ,EAAE,KAAKpB,cADjB;AAEE,MAAA,YAAY,EAAC,KAFf;AAGE,MAAA,IAAI,EAAC,OAHP;AAIE,MAAA,IAAI,EAAC,QAJP;AAKE,MAAA,GAAG,EAAC,GALN;AAME,MAAA,GAAG,EAAC,KANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAXF,CADF;AAwBD;;AA/DiC;;AAiEpC,MAAMqB,eAAe,GAAGxB,KAAK,IAAI;AAC/B,SAAO;AAAEY,IAAAA,IAAI,EAAEZ,KAAK,CAACY,IAAN,CAAWA;AAAnB,GAAP;AACD,CAFD;;AAGA,eAAehB,OAAO,CAAC4B,eAAD,CAAP,CAAyB1B,KAAzB,CAAf;AAEA2B,MAAM,GAAG5B,MAAM,CAAC6B,KAAM,EAAtB","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nclass Audio extends React.Component {\r\n  state = {\r\n    duration: null,\r\n    volume: 100,\r\n  };\r\n  onChangeSlider = e => {\r\n    this.audio.volume = e.target.value / 100;\r\n  };\r\n  handlePlay() {\r\n    if (this.props.play === \"play\" && this.audio) {\r\n      this.audio.play();\r\n    }\r\n  }\r\n\r\n  handlePause() {\r\n    if (this.props.play === \"pause\" && this.audio) {\r\n      this.audio.pause();\r\n    }\r\n  }\r\n  handleStop() {\r\n    if (this.props.play === \"stop\" && this.audio) {\r\n      this.audio.currentTime = 0;\r\n      this.audio.pause();\r\n    }\r\n  }\r\n  sendData = () => {\r\n    this.props.parentCallback(this.state.duration);\r\n  };\r\n  componentDidMount() {\r\n    this.audio.onloadedmetadata = () => {\r\n      console.log(this.audio.volume);\r\n      this.setState(\r\n        { duration: this.audio.duration, volume: this.audio.volume },\r\n        this.sendData\r\n      );\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.handlePlay()}\r\n        {this.handleStop()}\r\n        {this.handlePause()}\r\n        <audio\r\n          ref={audio => {\r\n            this.audio = audio;\r\n          }}\r\n          src={this.props.src}\r\n        />\r\n\r\n        <p>\r\n          <input\r\n            onChange={this.onChangeSlider}\r\n            defaultValue=\"100\"\r\n            type=\"range\"\r\n            name=\"points\"\r\n            min=\"0\"\r\n            max=\"100\"\r\n          />\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return { play: state.play.play };\r\n};\r\nexport default connect(mapStateToProps)(Audio);\r\n\r\nSlider = styled.input``;\r\n"]},"metadata":{},"sourceType":"module"}