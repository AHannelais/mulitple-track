{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\Workspace\\\\mutliple-tracks\\\\src\\\\components\\\\Audio.js\";\nimport React from \"react\";\n\nclass Audio extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      duration: null\n    };\n  }\n\n  handlePlay() {\n    // if (this.props.onPlay) {\n    this.audio.play(); // }\n  }\n\n  handleStop() {\n    this.audio.currentTime = 0;\n    this.slider.value = 0;\n    this.audio.pause();\n  }\n\n  componentDidMount() {\n    this.slider.value = 0;\n    this.currentTimeInterval = null;\n\n    this.audio.onloadedmetadata = () => {\n      this.setState({\n        duration: this.audio.duration\n      });\n    };\n\n    this.audio.onplay = () => {\n      this.currentTimeInterval = setInterval(() => {\n        this.slider.value = this.audio.currentTime;\n      }, 500);\n    };\n\n    this.audio.onpause = () => {\n      clearInterval(this.currentTimeInterval);\n    };\n\n    this.slider.onchange = e => {\n      clearInterval(this.currentTimeInterval);\n      this.audio.currentTime = e.target.value;\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"audio\", {\n      ref: audio => {\n        this.audio = audio;\n      },\n      src: this.props.src,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"button\",\n      value: \"Play\",\n      onClick: this.handlePlay.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"button\",\n      value: \"Stop\",\n      onClick: this.handleStop.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      ref: slider => {\n        this.slider = slider;\n      },\n      type: \"range\",\n      name: \"points\",\n      min: \"0\",\n      max: this.state.duration,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Audio;","map":{"version":3,"sources":["D:/Code/Workspace/mutliple-tracks/src/components/Audio.js"],"names":["React","Audio","Component","state","duration","handlePlay","audio","play","handleStop","currentTime","slider","value","pause","componentDidMount","currentTimeInterval","onloadedmetadata","setState","onplay","setInterval","onpause","clearInterval","onchange","e","target","render","props","src","bind"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AACA,MAAMC,KAAN,SAAoBD,KAAK,CAACE,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAClCC,KADkC,GAC1B;AACNC,MAAAA,QAAQ,EAAE;AADJ,KAD0B;AAAA;;AAKlCC,EAAAA,UAAU,GAAG;AACX;AACA,SAAKC,KAAL,CAAWC,IAAX,GAFW,CAGX;AACD;;AAEDC,EAAAA,UAAU,GAAG;AACX,SAAKF,KAAL,CAAWG,WAAX,GAAyB,CAAzB;AACA,SAAKC,MAAL,CAAYC,KAAZ,GAAoB,CAApB;AACA,SAAKL,KAAL,CAAWM,KAAX;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKH,MAAL,CAAYC,KAAZ,GAAoB,CAApB;AACA,SAAKG,mBAAL,GAA2B,IAA3B;;AAEA,SAAKR,KAAL,CAAWS,gBAAX,GAA8B,MAAM;AAClC,WAAKC,QAAL,CAAc;AAAEZ,QAAAA,QAAQ,EAAE,KAAKE,KAAL,CAAWF;AAAvB,OAAd;AACD,KAFD;;AAIA,SAAKE,KAAL,CAAWW,MAAX,GAAoB,MAAM;AACxB,WAAKH,mBAAL,GAA2BI,WAAW,CAAC,MAAM;AAC3C,aAAKR,MAAL,CAAYC,KAAZ,GAAoB,KAAKL,KAAL,CAAWG,WAA/B;AACD,OAFqC,EAEnC,GAFmC,CAAtC;AAGD,KAJD;;AAMA,SAAKH,KAAL,CAAWa,OAAX,GAAqB,MAAM;AACzBC,MAAAA,aAAa,CAAC,KAAKN,mBAAN,CAAb;AACD,KAFD;;AAIA,SAAKJ,MAAL,CAAYW,QAAZ,GAAuBC,CAAC,IAAI;AAC1BF,MAAAA,aAAa,CAAC,KAAKN,mBAAN,CAAb;AACA,WAAKR,KAAL,CAAWG,WAAX,GAAyBa,CAAC,CAACC,MAAF,CAASZ,KAAlC;AACD,KAHD;AAID;;AAEDa,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,GAAG,EAAElB,KAAK,IAAI;AACZ,aAAKA,KAAL,GAAaA,KAAb;AACD,OAHH;AAIE,MAAA,GAAG,EAAE,KAAKmB,KAAL,CAAWC,GAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAQE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,KAAK,EAAC,MAFR;AAGE,MAAA,OAAO,EAAE,KAAKrB,UAAL,CAAgBsB,IAAhB,CAAqB,IAArB,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,EAcE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,KAAK,EAAC,MAFR;AAGE,MAAA,OAAO,EAAE,KAAKnB,UAAL,CAAgBmB,IAAhB,CAAqB,IAArB,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdF,EAoBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,GAAG,EAAEjB,MAAM,IAAI;AACb,aAAKA,MAAL,GAAcA,MAAd;AACD,OAHH;AAIE,MAAA,IAAI,EAAC,OAJP;AAKE,MAAA,IAAI,EAAC,QALP;AAME,MAAA,GAAG,EAAC,GANN;AAOE,MAAA,GAAG,EAAE,KAAKP,KAAL,CAAWC,QAPlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CApBF,CADF;AAkCD;;AA5EiC;;AA8EpC,eAAeH,KAAf","sourcesContent":["import React from \"react\";\r\nclass Audio extends React.Component {\r\n  state = {\r\n    duration: null,\r\n  };\r\n\r\n  handlePlay() {\r\n    // if (this.props.onPlay) {\r\n    this.audio.play();\r\n    // }\r\n  }\r\n\r\n  handleStop() {\r\n    this.audio.currentTime = 0;\r\n    this.slider.value = 0;\r\n    this.audio.pause();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.slider.value = 0;\r\n    this.currentTimeInterval = null;\r\n\r\n    this.audio.onloadedmetadata = () => {\r\n      this.setState({ duration: this.audio.duration });\r\n    };\r\n\r\n    this.audio.onplay = () => {\r\n      this.currentTimeInterval = setInterval(() => {\r\n        this.slider.value = this.audio.currentTime;\r\n      }, 500);\r\n    };\r\n\r\n    this.audio.onpause = () => {\r\n      clearInterval(this.currentTimeInterval);\r\n    };\r\n\r\n    this.slider.onchange = e => {\r\n      clearInterval(this.currentTimeInterval);\r\n      this.audio.currentTime = e.target.value;\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <audio\r\n          ref={audio => {\r\n            this.audio = audio;\r\n          }}\r\n          src={this.props.src}\r\n        />\r\n\r\n        <input\r\n          type=\"button\"\r\n          value=\"Play\"\r\n          onClick={this.handlePlay.bind(this)}\r\n        />\r\n\r\n        <input\r\n          type=\"button\"\r\n          value=\"Stop\"\r\n          onClick={this.handleStop.bind(this)}\r\n        />\r\n\r\n        <p>\r\n          <input\r\n            ref={slider => {\r\n              this.slider = slider;\r\n            }}\r\n            type=\"range\"\r\n            name=\"points\"\r\n            min=\"0\"\r\n            max={this.state.duration}\r\n          />\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Audio;\r\n"]},"metadata":{},"sourceType":"module"}