{"ast":null,"code":"import _objectSpread from \"D:\\\\Code\\\\Workspace\\\\mutliple-tracks\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport { combineReducers } from \"redux\";\nimport _ from \"lodash\";\nexport const trackListReducer = (state = {\n  lol: {\n    duration: \"ok\"\n  }\n}, action) => {\n  switch (action.type) {\n    case \"ADD_TRACK\":\n      return _objectSpread({}, state, {\n        [action.payload.fileUrl]: action.payload\n      });\n\n    case \"REMOVE_TRACK\":\n      return _.omit(state, action.payload);\n\n    case \"FETCH_TRACKS\":\n      return _objectSpread({}, state, {}, _.mapKeys(action.payload, \"filename\"));\n\n    default:\n      return state;\n  }\n};\nexport const playTrackReducer = (state = {\n  play: \"stop\"\n}, action) => {\n  switch (action.type) {\n    case \"PLAY_TRACKS\":\n      return _objectSpread({}, state, {\n        play: \"play\"\n      });\n\n    case \"PAUSE_TRACKS\":\n      return _objectSpread({}, state, {\n        play: \"pause\"\n      });\n\n    case \"STOP_TRACKS\":\n      return _objectSpread({}, state, {\n        play: \"stop\"\n      });\n\n    default:\n      return state;\n  }\n};\nexport default combineReducers({\n  tracks: trackListReducer,\n  play: playTrackReducer\n});","map":{"version":3,"sources":["D:/Code/Workspace/mutliple-tracks/src/reducers/index.js"],"names":["combineReducers","_","trackListReducer","state","lol","duration","action","type","payload","fileUrl","omit","mapKeys","playTrackReducer","play","tracks"],"mappings":";AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,OAAOC,CAAP,MAAc,QAAd;AAEA,OAAO,MAAMC,gBAAgB,GAAG,CAC9BC,KAAK,GAAG;AAAEC,EAAAA,GAAG,EAAE;AAAEC,IAAAA,QAAQ,EAAE;AAAZ;AAAP,CADsB,EAE9BC,MAF8B,KAG3B;AACH,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,WAAL;AACE,+BAAYJ,KAAZ;AAAmB,SAACG,MAAM,CAACE,OAAP,CAAeC,OAAhB,GAA0BH,MAAM,CAACE;AAApD;;AACF,SAAK,cAAL;AACE,aAAOP,CAAC,CAACS,IAAF,CAAOP,KAAP,EAAcG,MAAM,CAACE,OAArB,CAAP;;AAEF,SAAK,cAAL;AACE,+BAAYL,KAAZ,MAAsBF,CAAC,CAACU,OAAF,CAAUL,MAAM,CAACE,OAAjB,EAA0B,UAA1B,CAAtB;;AACF;AACE,aAAOL,KAAP;AATJ;AAWD,CAfM;AAiBP,OAAO,MAAMS,gBAAgB,GAAG,CAACT,KAAK,GAAG;AAAEU,EAAAA,IAAI,EAAE;AAAR,CAAT,EAA2BP,MAA3B,KAAsC;AACpE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,aAAL;AACE,+BAAYJ,KAAZ;AAAmBU,QAAAA,IAAI,EAAE;AAAzB;;AACF,SAAK,cAAL;AACE,+BAAYV,KAAZ;AAAmBU,QAAAA,IAAI,EAAE;AAAzB;;AACF,SAAK,aAAL;AACE,+BAAYV,KAAZ;AAAmBU,QAAAA,IAAI,EAAE;AAAzB;;AACF;AACE,aAAOV,KAAP;AARJ;AAUD,CAXM;AAYP,eAAeH,eAAe,CAAC;AAC7Bc,EAAAA,MAAM,EAAEZ,gBADqB;AAE7BW,EAAAA,IAAI,EAAED;AAFuB,CAAD,CAA9B","sourcesContent":["import { combineReducers } from \"redux\";\r\nimport _ from \"lodash\";\r\n\r\nexport const trackListReducer = (\r\n  state = { lol: { duration: \"ok\" } },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case \"ADD_TRACK\":\r\n      return { ...state, [action.payload.fileUrl]: action.payload };\r\n    case \"REMOVE_TRACK\":\r\n      return _.omit(state, action.payload);\r\n\r\n    case \"FETCH_TRACKS\":\r\n      return { ...state, ..._.mapKeys(action.payload, \"filename\") };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const playTrackReducer = (state = { play: \"stop\" }, action) => {\r\n  switch (action.type) {\r\n    case \"PLAY_TRACKS\":\r\n      return { ...state, play: \"play\" };\r\n    case \"PAUSE_TRACKS\":\r\n      return { ...state, play: \"pause\" };\r\n    case \"STOP_TRACKS\":\r\n      return { ...state, play: \"stop\" };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default combineReducers({\r\n  tracks: trackListReducer,\r\n  play: playTrackReducer,\r\n});\r\n"]},"metadata":{},"sourceType":"module"}